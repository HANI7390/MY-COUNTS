<?php
// This script and data application were generated by AppGini 22.12
// Download AppGini for free from https://bigprof.com/appgini/download/

	/* Configuration */
	/*************************************/

		$pcConfig = [
			'table1' => [
				'field10' => [
					'parent-table' => 'table4',
					'parent-primary-key' => 'ID',
					'child-primary-key' => 'ID',
					'child-primary-key-index' => 0,
					'tab-label' => '&#1575;&#1604;&#1581;&#1585;&#1603;&#1577; &#1575;&#1604;&#1610;&#1608;&#1605;&#1610;&#1577; <span class="hidden child-label-table1 child-field-caption">(&#1605;&#1606; &#1582;&#1586;&#1610;&#1606;&#1577;)</span>',
					'auto-close' => true,
					'table-icon' => 'table.gif',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => [0 => 'ID', 1 => '&#1578;&#1575;&#1585;&#1610;&#1582; &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;', 3 => '&#1606;&#1608;&#1593; - &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;', 5 => '&#1606;&#1608;&#1593; - &#1575;&#1604;&#1593;&#1605;&#1604;&#1577;', 7 => '&#1575;&#1604;&#1602;&#1610;&#1605;&#1577;', 8 => '&#1587;&#1593;&#1585; &#1575;&#1604;&#1589;&#1585;&#1601;', 9 => '&#1575;&#1604;&#1575;&#1580;&#1605;&#1575;&#1604;&#1610;', 11 => '&#1605;&#1606; - &#1582;&#1586;&#1610;&#1606;&#1577;', 13 => '&#1575;&#1604;&#1610; - &#1582;&#1586;&#1610;&#1606;&#1577;', 14 => '&#1585;&#1602;&#1605; &#1575;&#1604;&#1576;&#1591;&#1575;&#1602;&#1577;', 16 => '&#1575;&#1604;&#1593;&#1605;&#1610;&#1604;', 17 => '&#1575;&#1604;&#1602;&#1610;&#1605;&#1577; &#1575;&#1604;&#1605;&#1587;&#1581;&#1608;&#1576;&#1577;', 18 => '&#1593;&#1605;&#1608;&#1604;&#1577; &#1575;&#1604;&#1587;&#1581;&#1576;', 19 => '&#1585;&#1589;&#1610;&#1583; &#1605;&#1578;&#1575;&#1581;', 21 => '&#1605;&#1603;&#1610;&#1606;&#1577; &#1575;&#1604;&#1587;&#1581;&#1576;', 24 => '&#1578;&#1587;&#1604;&#1610;&#1605; &#1602; &#1573;&#1588;&#1575;&#1585;&#1610;', 25 => '&#1585;&#1602;&#1605; &#1573;&#1588;&#1575;&#1585;&#1610;', 26 => '&#1605;&#1606;.&#1582;&#1586;&#1610;&#1606;&#1577;', 28 => '&#1605;&#1604;&#1575;&#1581;&#1592;&#1577; &#1593;&#1606; &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;'],
					'display-field-names' => [0 => 'ID', 1 => 'field2', 3 => 'field4', 5 => 'field6', 7 => 'field14', 8 => 'field8', 9 => 'field9', 11 => 'field11', 13 => 'field13', 14 => 'field16', 16 => 'field24', 17 => 'field18', 18 => 'field19', 19 => 'field20', 21 => 'field25', 24 => 'field26', 25 => 'field29', 26 => 'field27', 28 => 'field15'],
					'sortable-fields' => [0 => '`table1`.`ID`', 1 => '`table1`.`field2`', 2 => '`table31`.`field2`', 3 => 4, 4 => '`table21`.`field2`', 5 => 6, 6 => '`table1`.`field7`', 7 => '`table1`.`field14`', 8 => '`table1`.`field8`', 9 => '`table1`.`field9`', 10 => '`table41`.`field2`', 11 => 12, 12 => '`table42`.`field2`', 13 => 14, 14 => 15, 15 => '`table51`.`field2`', 16 => 17, 17 => '`table1`.`field18`', 18 => '`table1`.`field19`', 19 => '`table1`.`field20`', 20 => '`table43`.`field2`', 21 => 22, 22 => '`table1`.`field23`', 23 => '`table1`.`field22`', 24 => '`table1`.`field26`', 25 => 26, 26 => '`table44`.`field2`', 27 => 28, 28 => 29],
					'records-per-page' => 10,
					'default-sort-by' => 1,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-table1',
					'template-printable' => 'children-table1-printable',
					'query' => "SELECT `table1`.`ID` as 'ID', if(`table1`.`field2`,date_format(`table1`.`field2`,'%Y-%m-%d'),'') as 'field2', IF(    CHAR_LENGTH(`table31`.`field2`), CONCAT_WS('',   `table31`.`field2`), '') as 'field3', `table1`.`field4` as 'field4', IF(    CHAR_LENGTH(`table21`.`field2`), CONCAT_WS('',   `table21`.`field2`), '') as 'field5', `table1`.`field6` as 'field6', `table1`.`field7` as 'field7', `table1`.`field14` as 'field14', `table1`.`field8` as 'field8', `table1`.`field9` as 'field9', IF(    CHAR_LENGTH(`table41`.`field2`), CONCAT_WS('',   `table41`.`field2`), '') as 'field10', `table1`.`field11` as 'field11', IF(    CHAR_LENGTH(`table42`.`field2`), CONCAT_WS('',   `table42`.`field2`), '') as 'field12', `table1`.`field13` as 'field13', `table1`.`field16` as 'field16', IF(    CHAR_LENGTH(`table51`.`field2`), CONCAT_WS('',   `table51`.`field2`), '') as 'field17', `table1`.`field24` as 'field24', `table1`.`field18` as 'field18', `table1`.`field19` as 'field19', `table1`.`field20` as 'field20', IF(    CHAR_LENGTH(`table43`.`field2`), CONCAT_WS('',   `table43`.`field2`), '') as 'field21', `table1`.`field25` as 'field25', `table1`.`field23` as 'field23', `table1`.`field22` as 'field22', `table1`.`field26` as 'field26', `table1`.`field29` as 'field29', IF(    CHAR_LENGTH(`table44`.`field2`), CONCAT_WS('',   `table44`.`field2`), '') as 'field27', `table1`.`field28` as 'field28', `table1`.`field15` as 'field15' FROM `table1` LEFT JOIN `table3` as table31 ON `table31`.`id`=`table1`.`field3` LEFT JOIN `table2` as table21 ON `table21`.`id`=`table1`.`field5` LEFT JOIN `table4` as table41 ON `table41`.`ID`=`table1`.`field10` LEFT JOIN `table4` as table42 ON `table42`.`ID`=`table1`.`field12` LEFT JOIN `table5` as table51 ON `table51`.`ID`=`table1`.`field17` LEFT JOIN `table4` as table43 ON `table43`.`ID`=`table1`.`field21` LEFT JOIN `table4` as table44 ON `table44`.`ID`=`table1`.`field27` "
				],
				'field12' => [
					'parent-table' => 'table4',
					'parent-primary-key' => 'ID',
					'child-primary-key' => 'ID',
					'child-primary-key-index' => 0,
					'tab-label' => '&#1575;&#1604;&#1581;&#1585;&#1603;&#1577; &#1575;&#1604;&#1610;&#1608;&#1605;&#1610;&#1577; <span class="hidden child-label-table1 child-field-caption">(&#1575;&#1604;&#1610; &#1582;&#1586;&#1610;&#1606;&#1577;)</span>',
					'auto-close' => true,
					'table-icon' => 'table.gif',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => [0 => 'ID', 1 => '&#1578;&#1575;&#1585;&#1610;&#1582; &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;', 3 => '&#1606;&#1608;&#1593; - &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;', 5 => '&#1606;&#1608;&#1593; - &#1575;&#1604;&#1593;&#1605;&#1604;&#1577;', 7 => '&#1575;&#1604;&#1602;&#1610;&#1605;&#1577;', 8 => '&#1587;&#1593;&#1585; &#1575;&#1604;&#1589;&#1585;&#1601;', 9 => '&#1575;&#1604;&#1575;&#1580;&#1605;&#1575;&#1604;&#1610;', 11 => '&#1605;&#1606; - &#1582;&#1586;&#1610;&#1606;&#1577;', 13 => '&#1575;&#1604;&#1610; - &#1582;&#1586;&#1610;&#1606;&#1577;', 14 => '&#1585;&#1602;&#1605; &#1575;&#1604;&#1576;&#1591;&#1575;&#1602;&#1577;', 16 => '&#1575;&#1604;&#1593;&#1605;&#1610;&#1604;', 17 => '&#1575;&#1604;&#1602;&#1610;&#1605;&#1577; &#1575;&#1604;&#1605;&#1587;&#1581;&#1608;&#1576;&#1577;', 18 => '&#1593;&#1605;&#1608;&#1604;&#1577; &#1575;&#1604;&#1587;&#1581;&#1576;', 19 => '&#1585;&#1589;&#1610;&#1583; &#1605;&#1578;&#1575;&#1581;', 21 => '&#1605;&#1603;&#1610;&#1606;&#1577; &#1575;&#1604;&#1587;&#1581;&#1576;', 24 => '&#1578;&#1587;&#1604;&#1610;&#1605; &#1602; &#1573;&#1588;&#1575;&#1585;&#1610;', 25 => '&#1585;&#1602;&#1605; &#1573;&#1588;&#1575;&#1585;&#1610;', 26 => '&#1605;&#1606;.&#1582;&#1586;&#1610;&#1606;&#1577;', 28 => '&#1605;&#1604;&#1575;&#1581;&#1592;&#1577; &#1593;&#1606; &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;'],
					'display-field-names' => [0 => 'ID', 1 => 'field2', 3 => 'field4', 5 => 'field6', 7 => 'field14', 8 => 'field8', 9 => 'field9', 11 => 'field11', 13 => 'field13', 14 => 'field16', 16 => 'field24', 17 => 'field18', 18 => 'field19', 19 => 'field20', 21 => 'field25', 24 => 'field26', 25 => 'field29', 26 => 'field27', 28 => 'field15'],
					'sortable-fields' => [0 => '`table1`.`ID`', 1 => '`table1`.`field2`', 2 => '`table31`.`field2`', 3 => 4, 4 => '`table21`.`field2`', 5 => 6, 6 => '`table1`.`field7`', 7 => '`table1`.`field14`', 8 => '`table1`.`field8`', 9 => '`table1`.`field9`', 10 => '`table41`.`field2`', 11 => 12, 12 => '`table42`.`field2`', 13 => 14, 14 => 15, 15 => '`table51`.`field2`', 16 => 17, 17 => '`table1`.`field18`', 18 => '`table1`.`field19`', 19 => '`table1`.`field20`', 20 => '`table43`.`field2`', 21 => 22, 22 => '`table1`.`field23`', 23 => '`table1`.`field22`', 24 => '`table1`.`field26`', 25 => 26, 26 => '`table44`.`field2`', 27 => 28, 28 => 29],
					'records-per-page' => 10,
					'default-sort-by' => 1,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-table1',
					'template-printable' => 'children-table1-printable',
					'query' => "SELECT `table1`.`ID` as 'ID', if(`table1`.`field2`,date_format(`table1`.`field2`,'%Y-%m-%d'),'') as 'field2', IF(    CHAR_LENGTH(`table31`.`field2`), CONCAT_WS('',   `table31`.`field2`), '') as 'field3', `table1`.`field4` as 'field4', IF(    CHAR_LENGTH(`table21`.`field2`), CONCAT_WS('',   `table21`.`field2`), '') as 'field5', `table1`.`field6` as 'field6', `table1`.`field7` as 'field7', `table1`.`field14` as 'field14', `table1`.`field8` as 'field8', `table1`.`field9` as 'field9', IF(    CHAR_LENGTH(`table41`.`field2`), CONCAT_WS('',   `table41`.`field2`), '') as 'field10', `table1`.`field11` as 'field11', IF(    CHAR_LENGTH(`table42`.`field2`), CONCAT_WS('',   `table42`.`field2`), '') as 'field12', `table1`.`field13` as 'field13', `table1`.`field16` as 'field16', IF(    CHAR_LENGTH(`table51`.`field2`), CONCAT_WS('',   `table51`.`field2`), '') as 'field17', `table1`.`field24` as 'field24', `table1`.`field18` as 'field18', `table1`.`field19` as 'field19', `table1`.`field20` as 'field20', IF(    CHAR_LENGTH(`table43`.`field2`), CONCAT_WS('',   `table43`.`field2`), '') as 'field21', `table1`.`field25` as 'field25', `table1`.`field23` as 'field23', `table1`.`field22` as 'field22', `table1`.`field26` as 'field26', `table1`.`field29` as 'field29', IF(    CHAR_LENGTH(`table44`.`field2`), CONCAT_WS('',   `table44`.`field2`), '') as 'field27', `table1`.`field28` as 'field28', `table1`.`field15` as 'field15' FROM `table1` LEFT JOIN `table3` as table31 ON `table31`.`id`=`table1`.`field3` LEFT JOIN `table2` as table21 ON `table21`.`id`=`table1`.`field5` LEFT JOIN `table4` as table41 ON `table41`.`ID`=`table1`.`field10` LEFT JOIN `table4` as table42 ON `table42`.`ID`=`table1`.`field12` LEFT JOIN `table5` as table51 ON `table51`.`ID`=`table1`.`field17` LEFT JOIN `table4` as table43 ON `table43`.`ID`=`table1`.`field21` LEFT JOIN `table4` as table44 ON `table44`.`ID`=`table1`.`field27` "
				],
				'field21' => [
					'parent-table' => 'table4',
					'parent-primary-key' => 'ID',
					'child-primary-key' => 'ID',
					'child-primary-key-index' => 0,
					'tab-label' => '&#1575;&#1604;&#1581;&#1585;&#1603;&#1577; &#1575;&#1604;&#1610;&#1608;&#1605;&#1610;&#1577; <span class="hidden child-label-table1 child-field-caption">(&#1575;&#1604;&#1605;&#1603;&#1610;&#1606;&#1577;)</span>',
					'auto-close' => true,
					'table-icon' => 'table.gif',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => [0 => 'ID', 1 => '&#1578;&#1575;&#1585;&#1610;&#1582; &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;', 3 => '&#1606;&#1608;&#1593; - &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;', 5 => '&#1606;&#1608;&#1593; - &#1575;&#1604;&#1593;&#1605;&#1604;&#1577;', 7 => '&#1575;&#1604;&#1602;&#1610;&#1605;&#1577;', 8 => '&#1587;&#1593;&#1585; &#1575;&#1604;&#1589;&#1585;&#1601;', 9 => '&#1575;&#1604;&#1575;&#1580;&#1605;&#1575;&#1604;&#1610;', 11 => '&#1605;&#1606; - &#1582;&#1586;&#1610;&#1606;&#1577;', 13 => '&#1575;&#1604;&#1610; - &#1582;&#1586;&#1610;&#1606;&#1577;', 14 => '&#1585;&#1602;&#1605; &#1575;&#1604;&#1576;&#1591;&#1575;&#1602;&#1577;', 16 => '&#1575;&#1604;&#1593;&#1605;&#1610;&#1604;', 17 => '&#1575;&#1604;&#1602;&#1610;&#1605;&#1577; &#1575;&#1604;&#1605;&#1587;&#1581;&#1608;&#1576;&#1577;', 18 => '&#1593;&#1605;&#1608;&#1604;&#1577; &#1575;&#1604;&#1587;&#1581;&#1576;', 19 => '&#1585;&#1589;&#1610;&#1583; &#1605;&#1578;&#1575;&#1581;', 21 => '&#1605;&#1603;&#1610;&#1606;&#1577; &#1575;&#1604;&#1587;&#1581;&#1576;', 24 => '&#1578;&#1587;&#1604;&#1610;&#1605; &#1602; &#1573;&#1588;&#1575;&#1585;&#1610;', 25 => '&#1585;&#1602;&#1605; &#1573;&#1588;&#1575;&#1585;&#1610;', 26 => '&#1605;&#1606;.&#1582;&#1586;&#1610;&#1606;&#1577;', 28 => '&#1605;&#1604;&#1575;&#1581;&#1592;&#1577; &#1593;&#1606; &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;'],
					'display-field-names' => [0 => 'ID', 1 => 'field2', 3 => 'field4', 5 => 'field6', 7 => 'field14', 8 => 'field8', 9 => 'field9', 11 => 'field11', 13 => 'field13', 14 => 'field16', 16 => 'field24', 17 => 'field18', 18 => 'field19', 19 => 'field20', 21 => 'field25', 24 => 'field26', 25 => 'field29', 26 => 'field27', 28 => 'field15'],
					'sortable-fields' => [0 => '`table1`.`ID`', 1 => '`table1`.`field2`', 2 => '`table31`.`field2`', 3 => 4, 4 => '`table21`.`field2`', 5 => 6, 6 => '`table1`.`field7`', 7 => '`table1`.`field14`', 8 => '`table1`.`field8`', 9 => '`table1`.`field9`', 10 => '`table41`.`field2`', 11 => 12, 12 => '`table42`.`field2`', 13 => 14, 14 => 15, 15 => '`table51`.`field2`', 16 => 17, 17 => '`table1`.`field18`', 18 => '`table1`.`field19`', 19 => '`table1`.`field20`', 20 => '`table43`.`field2`', 21 => 22, 22 => '`table1`.`field23`', 23 => '`table1`.`field22`', 24 => '`table1`.`field26`', 25 => 26, 26 => '`table44`.`field2`', 27 => 28, 28 => 29],
					'records-per-page' => 10,
					'default-sort-by' => 1,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-table1',
					'template-printable' => 'children-table1-printable',
					'query' => "SELECT `table1`.`ID` as 'ID', if(`table1`.`field2`,date_format(`table1`.`field2`,'%Y-%m-%d'),'') as 'field2', IF(    CHAR_LENGTH(`table31`.`field2`), CONCAT_WS('',   `table31`.`field2`), '') as 'field3', `table1`.`field4` as 'field4', IF(    CHAR_LENGTH(`table21`.`field2`), CONCAT_WS('',   `table21`.`field2`), '') as 'field5', `table1`.`field6` as 'field6', `table1`.`field7` as 'field7', `table1`.`field14` as 'field14', `table1`.`field8` as 'field8', `table1`.`field9` as 'field9', IF(    CHAR_LENGTH(`table41`.`field2`), CONCAT_WS('',   `table41`.`field2`), '') as 'field10', `table1`.`field11` as 'field11', IF(    CHAR_LENGTH(`table42`.`field2`), CONCAT_WS('',   `table42`.`field2`), '') as 'field12', `table1`.`field13` as 'field13', `table1`.`field16` as 'field16', IF(    CHAR_LENGTH(`table51`.`field2`), CONCAT_WS('',   `table51`.`field2`), '') as 'field17', `table1`.`field24` as 'field24', `table1`.`field18` as 'field18', `table1`.`field19` as 'field19', `table1`.`field20` as 'field20', IF(    CHAR_LENGTH(`table43`.`field2`), CONCAT_WS('',   `table43`.`field2`), '') as 'field21', `table1`.`field25` as 'field25', `table1`.`field23` as 'field23', `table1`.`field22` as 'field22', `table1`.`field26` as 'field26', `table1`.`field29` as 'field29', IF(    CHAR_LENGTH(`table44`.`field2`), CONCAT_WS('',   `table44`.`field2`), '') as 'field27', `table1`.`field28` as 'field28', `table1`.`field15` as 'field15' FROM `table1` LEFT JOIN `table3` as table31 ON `table31`.`id`=`table1`.`field3` LEFT JOIN `table2` as table21 ON `table21`.`id`=`table1`.`field5` LEFT JOIN `table4` as table41 ON `table41`.`ID`=`table1`.`field10` LEFT JOIN `table4` as table42 ON `table42`.`ID`=`table1`.`field12` LEFT JOIN `table5` as table51 ON `table51`.`ID`=`table1`.`field17` LEFT JOIN `table4` as table43 ON `table43`.`ID`=`table1`.`field21` LEFT JOIN `table4` as table44 ON `table44`.`ID`=`table1`.`field27` "
				],
				'field27' => [
					'parent-table' => 'table4',
					'parent-primary-key' => 'ID',
					'child-primary-key' => 'ID',
					'child-primary-key-index' => 0,
					'tab-label' => '&#1575;&#1604;&#1581;&#1585;&#1603;&#1577; &#1575;&#1604;&#1610;&#1608;&#1605;&#1610;&#1577; <span class="hidden child-label-table1 child-field-caption">(&#1605;&#1606;.&#1582;&#1586;&#1610;&#1606;&#1577;)</span>',
					'auto-close' => true,
					'table-icon' => 'table.gif',
					'display-refresh' => true,
					'display-add-new' => true,
					'forced-where' => '',
					'display-fields' => [0 => 'ID', 1 => '&#1578;&#1575;&#1585;&#1610;&#1582; &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;', 3 => '&#1606;&#1608;&#1593; - &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;', 5 => '&#1606;&#1608;&#1593; - &#1575;&#1604;&#1593;&#1605;&#1604;&#1577;', 7 => '&#1575;&#1604;&#1602;&#1610;&#1605;&#1577;', 8 => '&#1587;&#1593;&#1585; &#1575;&#1604;&#1589;&#1585;&#1601;', 9 => '&#1575;&#1604;&#1575;&#1580;&#1605;&#1575;&#1604;&#1610;', 11 => '&#1605;&#1606; - &#1582;&#1586;&#1610;&#1606;&#1577;', 13 => '&#1575;&#1604;&#1610; - &#1582;&#1586;&#1610;&#1606;&#1577;', 14 => '&#1585;&#1602;&#1605; &#1575;&#1604;&#1576;&#1591;&#1575;&#1602;&#1577;', 16 => '&#1575;&#1604;&#1593;&#1605;&#1610;&#1604;', 17 => '&#1575;&#1604;&#1602;&#1610;&#1605;&#1577; &#1575;&#1604;&#1605;&#1587;&#1581;&#1608;&#1576;&#1577;', 18 => '&#1593;&#1605;&#1608;&#1604;&#1577; &#1575;&#1604;&#1587;&#1581;&#1576;', 19 => '&#1585;&#1589;&#1610;&#1583; &#1605;&#1578;&#1575;&#1581;', 21 => '&#1605;&#1603;&#1610;&#1606;&#1577; &#1575;&#1604;&#1587;&#1581;&#1576;', 24 => '&#1578;&#1587;&#1604;&#1610;&#1605; &#1602; &#1573;&#1588;&#1575;&#1585;&#1610;', 25 => '&#1585;&#1602;&#1605; &#1573;&#1588;&#1575;&#1585;&#1610;', 26 => '&#1605;&#1606;.&#1582;&#1586;&#1610;&#1606;&#1577;', 28 => '&#1605;&#1604;&#1575;&#1581;&#1592;&#1577; &#1593;&#1606; &#1575;&#1604;&#1581;&#1585;&#1603;&#1577;'],
					'display-field-names' => [0 => 'ID', 1 => 'field2', 3 => 'field4', 5 => 'field6', 7 => 'field14', 8 => 'field8', 9 => 'field9', 11 => 'field11', 13 => 'field13', 14 => 'field16', 16 => 'field24', 17 => 'field18', 18 => 'field19', 19 => 'field20', 21 => 'field25', 24 => 'field26', 25 => 'field29', 26 => 'field27', 28 => 'field15'],
					'sortable-fields' => [0 => '`table1`.`ID`', 1 => '`table1`.`field2`', 2 => '`table31`.`field2`', 3 => 4, 4 => '`table21`.`field2`', 5 => 6, 6 => '`table1`.`field7`', 7 => '`table1`.`field14`', 8 => '`table1`.`field8`', 9 => '`table1`.`field9`', 10 => '`table41`.`field2`', 11 => 12, 12 => '`table42`.`field2`', 13 => 14, 14 => 15, 15 => '`table51`.`field2`', 16 => 17, 17 => '`table1`.`field18`', 18 => '`table1`.`field19`', 19 => '`table1`.`field20`', 20 => '`table43`.`field2`', 21 => 22, 22 => '`table1`.`field23`', 23 => '`table1`.`field22`', 24 => '`table1`.`field26`', 25 => 26, 26 => '`table44`.`field2`', 27 => 28, 28 => 29],
					'records-per-page' => 10,
					'default-sort-by' => 1,
					'default-sort-direction' => 'asc',
					'open-detail-view-on-click' => true,
					'display-page-selector' => true,
					'show-page-progress' => true,
					'template' => 'children-table1',
					'template-printable' => 'children-table1-printable',
					'query' => "SELECT `table1`.`ID` as 'ID', if(`table1`.`field2`,date_format(`table1`.`field2`,'%Y-%m-%d'),'') as 'field2', IF(    CHAR_LENGTH(`table31`.`field2`), CONCAT_WS('',   `table31`.`field2`), '') as 'field3', `table1`.`field4` as 'field4', IF(    CHAR_LENGTH(`table21`.`field2`), CONCAT_WS('',   `table21`.`field2`), '') as 'field5', `table1`.`field6` as 'field6', `table1`.`field7` as 'field7', `table1`.`field14` as 'field14', `table1`.`field8` as 'field8', `table1`.`field9` as 'field9', IF(    CHAR_LENGTH(`table41`.`field2`), CONCAT_WS('',   `table41`.`field2`), '') as 'field10', `table1`.`field11` as 'field11', IF(    CHAR_LENGTH(`table42`.`field2`), CONCAT_WS('',   `table42`.`field2`), '') as 'field12', `table1`.`field13` as 'field13', `table1`.`field16` as 'field16', IF(    CHAR_LENGTH(`table51`.`field2`), CONCAT_WS('',   `table51`.`field2`), '') as 'field17', `table1`.`field24` as 'field24', `table1`.`field18` as 'field18', `table1`.`field19` as 'field19', `table1`.`field20` as 'field20', IF(    CHAR_LENGTH(`table43`.`field2`), CONCAT_WS('',   `table43`.`field2`), '') as 'field21', `table1`.`field25` as 'field25', `table1`.`field23` as 'field23', `table1`.`field22` as 'field22', `table1`.`field26` as 'field26', `table1`.`field29` as 'field29', IF(    CHAR_LENGTH(`table44`.`field2`), CONCAT_WS('',   `table44`.`field2`), '') as 'field27', `table1`.`field28` as 'field28', `table1`.`field15` as 'field15' FROM `table1` LEFT JOIN `table3` as table31 ON `table31`.`id`=`table1`.`field3` LEFT JOIN `table2` as table21 ON `table21`.`id`=`table1`.`field5` LEFT JOIN `table4` as table41 ON `table41`.`ID`=`table1`.`field10` LEFT JOIN `table4` as table42 ON `table42`.`ID`=`table1`.`field12` LEFT JOIN `table5` as table51 ON `table51`.`ID`=`table1`.`field17` LEFT JOIN `table4` as table43 ON `table43`.`ID`=`table1`.`field21` LEFT JOIN `table4` as table44 ON `table44`.`ID`=`table1`.`field27` "
				],
			],
			'table4' => [
			],
			'table2' => [
			],
			'table3' => [
			],
			'table5' => [
			],
		];

	/*************************************/
	/* End of configuration */


	include_once(__DIR__ . '/lib.php');
	@header('Content-Type: text/html; charset=' . datalist_db_encoding);

	handle_maintenance();

	/**
	* dynamic configuration based on current user's permissions
	* $userPCConfig array is populated only with parent tables where the user has access to
	* at least one child table
	*/
	$userPCConfig = [];
	foreach($pcConfig as $pcChildTable => $ChildrenLookups) {
		$permChild = getTablePermissions($pcChildTable);
		if(!$permChild['view']) continue;

		foreach($ChildrenLookups as $ChildLookupField => $ChildConfig) {
			$permParent = getTablePermissions($ChildConfig['parent-table']);
			if(!$permParent['view']) continue;

			$userPCConfig[$pcChildTable][$ChildLookupField] = $pcConfig[$pcChildTable][$ChildLookupField];
			// show add new only if configured above AND the user has insert permission
			$userPCConfig[$pcChildTable][$ChildLookupField]['display-add-new'] = ($permChild['insert'] && $pcConfig[$pcChildTable][$ChildLookupField]['display-add-new']);
		}
	}

	/* Receive, UTF-convert, and validate parameters */
	$ParentTable = Request::val('ParentTable'); // needed only with operation=show-children, will be validated in the processing code
	$ChildTable = Request::val('ChildTable');
		if(!in_array($ChildTable, array_keys($userPCConfig))) {
			/* defaults to first child table in config array if not provided */
			$ChildTable = current(array_keys($userPCConfig));
		}
		if(!$ChildTable) { die('<!-- No tables accessible to current user -->'); }
	$SelectedID = strip_tags(Request::val('SelectedID'));
	$ChildLookupField = Request::val('ChildLookupField');
		if(!in_array($ChildLookupField, array_keys($userPCConfig[$ChildTable]))) {
			/* defaults to first lookup in current child config array if not provided */
			$ChildLookupField = current(array_keys($userPCConfig[$ChildTable]));
		}
	$Page = intval(Request::val('Page'));
		if($Page < 1) $Page = 1;
	$SortBy = (Request::val('SortBy') != '' ? abs(intval(Request::val('SortBy'))) : false);
		if(!in_array($SortBy, array_keys($userPCConfig[$ChildTable][$ChildLookupField]['sortable-fields']), true))
			$SortBy = $userPCConfig[$ChildTable][$ChildLookupField]['default-sort-by'];
	$SortDirection = strtolower(Request::val('SortDirection'));
		if(!in_array($SortDirection, ['asc', 'desc']))
			$SortDirection = $userPCConfig[$ChildTable][$ChildLookupField]['default-sort-direction'];
	$Operation = strtolower(Request::val('Operation'));
		if(!in_array($Operation, ['get-records', 'show-children', 'get-records-printable', 'show-children-printable']))
			$Operation = 'get-records';

	/* process requested operation */
	switch($Operation) {
		/************************************************/
		case 'show-children':
			/* populate HTML and JS content with children tabs */
			$tabLabels = $tabPanels = $tabLoaders = '';
			foreach($userPCConfig as $ChildTable => $childLookups) {
				foreach($childLookups as $ChildLookupField => $childConfig) {
					if($childConfig['parent-table'] != $ParentTable) continue;

					$TableIcon = ($childConfig['table-icon'] ? "<img src=\"{$childConfig['table-icon']}\" border=\"0\">" : '');

					$tabLabels .= "<li class=\"child-tab-label child-table-{$ChildTable} lookup-field-{$ChildLookupField} " . ($tabLabels ? '' : 'active') . "\">" .
							"<a href=\"#panel_{$ChildTable}-{$ChildLookupField}\" id=\"tab_{$ChildTable}-{$ChildLookupField}\" data-toggle=\"tab\">" .
								$TableIcon . $childConfig['tab-label'] .
								"<span class=\"badge child-count child-count-{$ChildTable}-{$ChildLookupField}\"></span>" .
							"</a>" .
						"</li>\n\t\t\t\t";

					$tabPanels .= "<div id=\"panel_{$ChildTable}-{$ChildLookupField}\" class=\"tab-pane" . ($tabPanels ? '' : ' active') . "\">" .
							"<i class=\"glyphicon glyphicon-refresh loop-rotate\"></i> " .
							"{$Translation['Loading ...']}" .
						"</div>\n\t\t\t\t";

					$tabLoaders .= "post('parent-children.php', " . json_encode([
							'ChildTable' => $ChildTable,
							'ChildLookupField' => $ChildLookupField,
							'SelectedID' => $SelectedID,
							'Page' => 1,
							'SortBy' => '',
							'SortDirection' => '',
							'Operation' => 'get-records'
						]) . ", 'panel_{$ChildTable}-{$ChildLookupField}');\n\t\t\t\t";
				}
			}

			if(!$tabLabels) { die('<!-- no children of current parent table are accessible to current user -->'); }
			?>
			<div id="children-tabs">
				<ul class="nav nav-tabs">
					<?php echo $tabLabels; ?>
				</ul>
				<span id="pc-loading"></span>
			</div>
			<div class="tab-content"><?php echo $tabPanels; ?></div>

			<script>
				$j(function() {
					/* for iOS, avoid loading child tabs in modals */
					var iOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
					var embedded = ($j('.navbar').length == 0);
					if(iOS && embedded) {
						$j('#children-tabs').next('.tab-content').remove();
						$j('#children-tabs').remove();
						return;
					}

					/* ajax loading of each tab's contents */
					<?php echo $tabLoaders; ?>

					/* show child field caption on tab title in case the same child table appears more than once */
					$j('.child-field-caption').each(function() {
						var clss = $j(this).attr('class').split(/\s+/).reduce(function(rc, cc) {
							return (cc.match(/child-label-.*/) ? '.' + cc : rc);
						}, '');

						// if class occurs more than once, remove .hidden
						if($j(clss).length > 1) $j(clss).removeClass('hidden');
					})
				})
			</script>
			<?php
			break;

		/************************************************/
		case 'show-children-printable':
			/* populate HTML and JS content with children buttons */
			$tabLabels = $tabPanels = $tabLoaders = '';
			foreach($userPCConfig as $ChildTable => $childLookups) {
				foreach($childLookups as $ChildLookupField => $childConfig) {
					if($childConfig['parent-table'] != $ParentTable) continue;

					$TableIcon = ($childConfig['table-icon'] ? "<img src=\"{$childConfig['table-icon']}\" border=\"0\">" : '');

					$tabLabels .= "<button type=\"button\" class=\"btn btn-default child-tab-print-toggler\" data-target=\"#panel_{$ChildTable}-{$ChildLookupField}\" id=\"tab_{$ChildTable}-{$ChildLookupField}\" data-toggle=\"collapse\">" .
							"{$TableIcon} {$childConfig['tab-label']}" .
							"<span class=\"badge child-count child-count-{$ChildTable}-{$ChildLookupField}\"></span>" .
						"</button>\n\t\t\t\t\t";

					$tabPanels .= "<div id=\"panel_{$ChildTable}-{$ChildLookupField}\" class=\"collapse child-panel-print\">" .
							"<i class=\"glyphicon glyphicon-refresh loop-rotate\"></i> " .
							$Translation['Loading ...'] .
						"</div>\n\t\t\t\t";

					$tabLoaders .= "post('parent-children.php', " . json_encode([
							'ChildTable' => $ChildTable,
							'ChildLookupField' => $ChildLookupField,
							'SelectedID' => $SelectedID,
							'Page' => 1,
							'SortBy' => '',
							'SortDirection' => '',
							'Operation' => 'get-records-printable'
						]) . ", 'panel_{$ChildTable}-{$ChildLookupField}');\n\t\t\t\t";
				}
			}

			if(!$tabLabels) { die('<!-- no children of current parent table are accessible to current user -->'); }
			?>
			<div id="children-tabs" class="hidden-print">
				<div class="btn-group btn-group-lg">
					<?php echo $tabLabels; ?>
				</div>
				<span id="pc-loading"></span>
			</div>
			<div class="vspacer-lg"><?php echo $tabPanels; ?></div>

			<script>
				$j(function() {
					/* for iOS, avoid loading child tabs in modals */
					var iOS = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
					var embedded = ($j('.navbar').length == 0);
					if(iOS && embedded) {
						$j('#children-tabs').next('.tab-content').remove();
						$j('#children-tabs').remove();
						return;
					}

					/* ajax loading of each tab's contents */
					<?php echo $tabLoaders; ?>
				})
			</script>
			<?php
			break;

		/************************************************/
		case 'get-records-printable':
		default: /* default is 'get-records' */

			if($Operation == 'get-records-printable') {
				$userPCConfig[$ChildTable][$ChildLookupField]['records-per-page'] = 2000;
			}

			// build the user permissions limiter
			$permissionsWhere = $permissionsJoin = '';
			$permChild = getTablePermissions($ChildTable);
			if($permChild['view'] == 1) { // user can view only his own records
				$permissionsWhere = "`$ChildTable`.`{$userPCConfig[$ChildTable][$ChildLookupField]['child-primary-key']}`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='$ChildTable' AND LCASE(`membership_userrecords`.`memberID`)='" . getLoggedMemberID() . "'";
			} elseif($permChild['view'] == 2) { // user can view only his group's records
				$permissionsWhere = "`$ChildTable`.`{$userPCConfig[$ChildTable][$ChildLookupField]['child-primary-key']}`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='$ChildTable' AND `membership_userrecords`.`groupID`='" . getLoggedGroupID() . "'";
			} elseif($permChild['view'] == 3) { // user can view all records
				/* that's the only case remaining ... no need to modify the query in this case */
			}
			$permissionsJoin = ($permissionsWhere ? ", `membership_userrecords`" : '');

			// build the count query
			$forcedWhere = $userPCConfig[$ChildTable][$ChildLookupField]['forced-where'];
			$query = 
				preg_replace('/^select .* from /i', 'SELECT count(1) FROM ', $userPCConfig[$ChildTable][$ChildLookupField]['query']) .
				$permissionsJoin . " WHERE " .
				($permissionsWhere ? "( $permissionsWhere )" : "( 1=1 )") . " AND " .
				($forcedWhere ? "( $forcedWhere )" : "( 2=2 )") . " AND " .
				"`$ChildTable`.`$ChildLookupField`='" . makeSafe($SelectedID) . "'";
			$totalMatches = sqlValue($query);

			// make sure $Page is <= max pages
			$maxPage = ceil($totalMatches / $userPCConfig[$ChildTable][$ChildLookupField]['records-per-page']);
			if($Page > $maxPage) { $Page = $maxPage; }

			// initiate output data array
			$data = [
				'config' => $userPCConfig[$ChildTable][$ChildLookupField],
				'parameters' => [
					'ChildTable' => $ChildTable,
					'ChildLookupField' => $ChildLookupField,
					'SelectedID' => $SelectedID,
					'Page' => $Page,
					'SortBy' => $SortBy,
					'SortDirection' => $SortDirection,
					'Operation' => $Operation,
				],
				'records' => [],
				'totalMatches' => $totalMatches
			];

			// build the data query
			if($totalMatches) { // if we have at least one record, proceed with fetching data
				$startRecord = $userPCConfig[$ChildTable][$ChildLookupField]['records-per-page'] * ($Page - 1);
				$data['query'] = 
					$userPCConfig[$ChildTable][$ChildLookupField]['query'] .
					$permissionsJoin . " WHERE " .
					($permissionsWhere ? "( $permissionsWhere )" : "( 1=1 )") . " AND " .
					($forcedWhere ? "( $forcedWhere )" : "( 2=2 )") . " AND " .
					"`$ChildTable`.`$ChildLookupField`='" . makeSafe($SelectedID) . "'" . 
					($SortBy !== false && $userPCConfig[$ChildTable][$ChildLookupField]['sortable-fields'][$SortBy] ? " ORDER BY {$userPCConfig[$ChildTable][$ChildLookupField]['sortable-fields'][$SortBy]} $SortDirection" : '') .
					" LIMIT $startRecord, {$userPCConfig[$ChildTable][$ChildLookupField]['records-per-page']}";
				$res = sql($data['query'], $eo);
				while($row = db_fetch_row($res)) {
					$data['records'][$row[$userPCConfig[$ChildTable][$ChildLookupField]['child-primary-key-index']]] = $row;
				}
			} else { // if no matching records
				$startRecord = 0;
			}

			if($Operation == 'get-records-printable') {
				$response = loadView($userPCConfig[$ChildTable][$ChildLookupField]['template-printable'], $data);
			} else {
				$response = loadView($userPCConfig[$ChildTable][$ChildLookupField]['template'], $data);
			}

			// change name space to ensure uniqueness
			$uniqueNameSpace = $ChildTable.ucfirst($ChildLookupField).'GetRecords';
			echo str_replace("{$ChildTable}GetChildrenRecordsList", $uniqueNameSpace, $response);
		/************************************************/
	}
